apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: pod-reader
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/exec"]
    verbs: ["get", "list", "watch", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: default
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: stop-kafka-topics
spec:
  template:
    spec:
      containers:
        - name: stop-kafka-topics
          image: bitnami/kubectl:latest
          command: ["/bin/bash", "-c"]
          args:
            - |
              KAFKA_DOCKER=$(kubectl get pods -l app=kafka -o jsonpath="{.items[0].metadata.name}")
              kubectl exec $KAFKA_DOCKER -- kafka-topics.sh --bootstrap-server kafka:9092 --delete --topic order-service-event-channel
              kubectl exec $KAFKA_DOCKER -- kafka-topics.sh --bootstrap-server kafka:9092 --delete --topic product-service-event-channel
              kubectl exec $KAFKA_DOCKER -- kafka-topics.sh --bootstrap-server kafka:9092 --delete --topic product-update-service-event-channel
              echo "Topics deleted"
      restartPolicy: Never
  backoffLimit: 4